# Generated by Django 5.0.4 on 2025-05-06 11:20

import django.db.models.deletion
import tinymce.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Folder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('slug', models.SlugField(unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='invoice_logo')),
                ('status', models.CharField(choices=[('empty', 'Empty'), ('pending', 'Pending'), ('paid', 'Paid'), ('cancelled', 'Cancelled')], default='empty', max_length=20)),
                ('from_name', models.CharField(max_length=255)),
                ('from_business', models.CharField(blank=True, max_length=255, null=True)),
                ('from_gst', models.CharField(blank=True, max_length=100, null=True)),
                ('from_address', models.TextField(blank=True, null=True)),
                ('from_pan', models.CharField(blank=True, max_length=100, null=True)),
                ('from_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('to_name', models.CharField(max_length=255)),
                ('to_business', models.CharField(blank=True, max_length=255, null=True)),
                ('to_gst', models.CharField(blank=True, max_length=100, null=True)),
                ('to_address', models.TextField(blank=True, null=True)),
                ('to_pan', models.CharField(blank=True, max_length=100, null=True)),
                ('to_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('invoice_number', models.CharField(max_length=100, unique=True)),
                ('invoice_date', models.DateField()),
                ('bank_name', models.CharField(blank=True, max_length=255, null=True)),
                ('account_number', models.CharField(blank=True, max_length=100, null=True)),
                ('ifsc_code', models.CharField(blank=True, max_length=50, null=True)),
                ('branch_name', models.CharField(blank=True, max_length=255, null=True)),
                ('mim_id', models.CharField(blank=True, max_length=100, null=True)),
                ('swift_id', models.CharField(blank=True, max_length=100, null=True)),
                ('additional_note', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='InvoiceRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logo', models.ImageField(upload_to='logos/')),
                ('company_name', models.CharField(max_length=255)),
                ('company_address', tinymce.models.HTMLField()),
                ('company_contact', tinymce.models.HTMLField()),
                ('invoice_date', models.DateField()),
                ('invoice_number', models.CharField(max_length=200, unique=True)),
                ('range_address', models.CharField(max_length=100)),
                ('division', models.CharField(max_length=100)),
                ('commissioner', models.CharField(max_length=100)),
                ('reverse_charge', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=3)),
                ('receiver_name', models.CharField(max_length=255)),
                ('receiver_address', models.TextField()),
                ('place_of_supply', models.CharField(max_length=100)),
                ('gstn', models.CharField(max_length=50)),
                ('state', models.CharField(max_length=100)),
                ('state_code', models.CharField(max_length=10)),
                ('total_amount_before_task', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('cgst', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('sgst', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('igst', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('total_amount_after_task', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('total_in_words', models.CharField(max_length=250)),
                ('bank_account', models.CharField(max_length=50)),
                ('ifsc', models.CharField(max_length=15)),
                ('branch', models.CharField(max_length=100)),
                ('qr_code', models.ImageField(blank=True, null=True, upload_to='qr_codes/')),
                ('pan', models.CharField(blank=True, max_length=50, null=True)),
                ('tds_rate', models.CharField(blank=True, max_length=50, null=True)),
                ('payment', models.CharField(blank=True, max_length=255, null=True)),
                ('gpay_phone', models.CharField(max_length=15)),
                ('footer_content', models.TextField()),
                ('status', models.CharField(choices=[('empty', 'Empty'), ('pending', 'Pending'), ('paid', 'Paid'), ('cancelled', 'Cancelled')], default='empty', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('slug', models.SlugField(unique=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Service',
                'verbose_name_plural': 'Services',
            },
        ),
        migrations.CreateModel(
            name='ClientAdminFolder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('admin', models.ForeignKey(blank=True, limit_choices_to={'is_admin': True}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='admin_folder', to=settings.AUTH_USER_MODEL)),
                ('client', models.ForeignKey(limit_choices_to={'is_admin': False}, on_delete=django.db.models.deletion.CASCADE, related_name='client_folder', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ClientAdminFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('file', models.FileField(upload_to='file')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('folder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='folder_file', to='client.clientadminfolder')),
            ],
            options={
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='Complaint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=150)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(limit_choices_to={'is_admin': False}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='InvoiceItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255)),
                ('rate', models.DecimalField(decimal_places=2, max_digits=10)),
                ('gst', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('other_tax', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('total_tax', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='client.invoicerecord')),
            ],
        ),
        migrations.CreateModel(
            name='InvoiceRecordItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('sac', models.CharField(blank=True, max_length=50, null=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoice_items', to='client.invoicerecord')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('message', models.TextField()),
                ('url', models.URLField(blank=True, null=True)),
                ('is_seen', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('recipient_type', models.CharField(choices=[('admin', 'Admin'), ('client', 'Client'), ('both', 'Both')], default='client', max_length=10)),
                ('admin', models.ForeignKey(blank=True, limit_choices_to={'is_admin': True}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='admin_notification', to=settings.AUTH_USER_MODEL)),
                ('client', models.ForeignKey(blank=True, limit_choices_to={'is_admin': False}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='client_notification', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RequestFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='file')),
                ('slug', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('folder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='client.folder')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RequestService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_number', models.CharField(max_length=10, unique=True)),
                ('request_date', models.DateTimeField(auto_now_add=True)),
                ('date_of_completion', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('empty', 'Empty'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='empty', max_length=20)),
                ('created_by_admin', models.BooleanField(default=False)),
                ('assigned_to_employee', models.ForeignKey(blank=True, limit_choices_to={'is_admin': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_employee', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, limit_choices_to={'is_admin': False}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_request_service', to=settings.AUTH_USER_MODEL)),
                ('services', models.ManyToManyField(to='client.service')),
            ],
            options={
                'ordering': ['-request_date'],
            },
        ),
        migrations.AddField(
            model_name='folder',
            name='request_service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='folders', to='client.requestservice'),
        ),
        migrations.CreateModel(
            name='RequestServiceChat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('admin', models.ForeignKey(blank=True, limit_choices_to={'is_admin': True}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='admin_service_request_chat', to=settings.AUTH_USER_MODEL)),
                ('client', models.ForeignKey(blank=True, limit_choices_to={'is_admin': False}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='client_service_request_chat', to=settings.AUTH_USER_MODEL)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_request_chat', to='client.requestservice')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RequestStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_update', models.DateTimeField()),
                ('status', models.CharField(choices=[('empty', 'Empty'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], max_length=20)),
                ('comment', models.CharField(blank=True, max_length=150, null=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employee_request_status', to=settings.AUTH_USER_MODEL)),
                ('request_number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='request_status', to='client.requestservice')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceRequestFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('file', models.FileField(upload_to='file')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_request_file_owner', to=settings.AUTH_USER_MODEL)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_request_file', to='client.requestservice')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceRequestFolder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('admin', models.ForeignKey(blank=True, limit_choices_to={'is_admin': True}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='admin_request_service_folder', to=settings.AUTH_USER_MODEL)),
                ('client', models.ForeignKey(blank=True, limit_choices_to={'is_admin': False}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='client_request_service_folder', to=settings.AUTH_USER_MODEL)),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='service_request', to='client.requestservice')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ServiceFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('file', models.FileField(upload_to='file')),
                ('is_private', models.BooleanField(default=False)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('admin', models.ForeignKey(blank=True, limit_choices_to={'is_admin': True}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='admin_file_upload', to=settings.AUTH_USER_MODEL)),
                ('client', models.ForeignKey(blank=True, limit_choices_to={'is_admin': False}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='client_file_upload', to=settings.AUTH_USER_MODEL)),
                ('folder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_request_file', to='client.servicerequestfolder')),
            ],
            options={
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='SubService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('slug', models.SlugField(unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sub_service', to='client.service')),
            ],
            options={
                'verbose_name': 'Sub Service',
                'verbose_name_plural': 'Sub Services',
            },
        ),
        migrations.AddField(
            model_name='requestservice',
            name='sub_services',
            field=models.ManyToManyField(to='client.subservice'),
        ),
    ]
