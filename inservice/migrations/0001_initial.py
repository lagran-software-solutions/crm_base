# Generated by Django 5.0.4 on 2025-05-06 11:08

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import tinymce.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Aboutgallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True)),
                ('title', models.CharField(blank=True, max_length=256, null=True)),
                ('image', models.ImageField(upload_to='about_gallery')),
            ],
        ),
        migrations.CreateModel(
            name='AboutHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(blank=True, max_length=256, null=True)),
                ('title', models.CharField(blank=True, max_length=256, null=True)),
                ('decription', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(upload_to='about')),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('left_discription', tinymce.models.HTMLField()),
                ('right_discription', tinymce.models.HTMLField()),
                ('email', models.CharField(max_length=150)),
                ('phone', models.IntegerField()),
                ('location_url', models.URLField(blank=True, max_length=1000, null=True)),
                ('button', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='Advertise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discription', tinymce.models.HTMLField(blank=True, null=True)),
                ('button_a', models.CharField(max_length=150)),
                ('button_b', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='banner')),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(blank=True, max_length=256, null=True)),
                ('mobile_no', models.CharField(blank=True, max_length=10, null=True)),
                ('whatsapp_no', models.CharField(blank=True, max_length=10, null=True)),
                ('banner_image', models.ImageField(blank=True, null=True, upload_to='contact')),
            ],
        ),
        migrations.CreateModel(
            name='Elementor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('header', models.CharField(max_length=100)),
                ('header_image', models.ImageField(upload_to='aboutus')),
                ('title', tinymce.models.HTMLField(blank=True, null=True)),
                ('discription_image', models.ImageField(upload_to='aboutus')),
                ('breif_discription', tinymce.models.HTMLField(blank=True, null=True)),
                ('detail_discription', tinymce.models.HTMLField(blank=True, null=True)),
                ('note', tinymce.models.HTMLField(blank=True, null=True)),
                ('button1', models.CharField(max_length=50)),
                ('button2', models.CharField(max_length=50)),
                ('banner_title', models.CharField(max_length=150)),
                ('gallery_header', tinymce.models.HTMLField(blank=True, null=True)),
                ('gallery_footer', tinymce.models.HTMLField(blank=True, null=True)),
                ('workflow_header', tinymce.models.HTMLField(blank=True, null=True)),
                ('services_header', models.CharField(max_length=100)),
                ('services_title', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='Footer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=75)),
                ('discription', tinymce.models.HTMLField(blank=True, null=True)),
                ('service1', models.CharField(max_length=155)),
                ('service2', models.CharField(max_length=155)),
                ('service3', models.CharField(max_length=155)),
                ('service4', models.CharField(max_length=155)),
                ('contact', models.CharField(max_length=55)),
                ('button', models.CharField(max_length=150)),
                ('facebook_link', models.TextField()),
                ('twitter_link', models.TextField()),
                ('linkedIn_link', models.TextField()),
                ('instagram_link', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Footerform',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('submitted_on', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ForgetPasswordRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('email_or_mobile', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='HappyUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logo_title', models.CharField(max_length=256)),
                ('logo', models.ImageField(upload_to='happyUser')),
            ],
        ),
        migrations.CreateModel(
            name='Homebanner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('subtitle1', models.CharField(max_length=150)),
                ('subtitle2', models.CharField(max_length=150)),
                ('subtitle3', models.CharField(max_length=150)),
                ('buttontext', models.CharField(max_length=150)),
                ('image', models.ImageField(upload_to='homepages')),
            ],
        ),
        migrations.CreateModel(
            name='indexform',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254)),
                ('message', models.TextField()),
                ('submitted_on', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Management',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='management')),
                ('name', models.CharField(max_length=100)),
                ('designation', models.CharField(max_length=100)),
                ('facebook_link', models.CharField(max_length=530)),
                ('twitter_link', models.CharField(max_length=530)),
                ('linkedIn_link', models.CharField(max_length=530)),
                ('google_link', models.CharField(max_length=530)),
            ],
        ),
        migrations.CreateModel(
            name='OurSolution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='OurSolution')),
                ('discription', tinymce.models.HTMLField(blank=True, null=True)),
                ('button', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='Reachus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254)),
                ('message', models.TextField()),
                ('submitted_on', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='SEO',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page', models.CharField(max_length=150, unique=True)),
                ('seo_title', models.CharField(max_length=60)),
                ('seo_description', models.CharField(max_length=160)),
                ('seo_keywords', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pageheader_image', models.ImageField(upload_to='services-homebanner')),
                ('slug', models.SlugField(max_length=155, unique=True)),
                ('title', models.CharField(max_length=100)),
                ('smalldiscription', models.TextField()),
                ('content', tinymce.models.HTMLField()),
            ],
        ),
        migrations.CreateModel(
            name='SiteDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(unique=True)),
                ('content', tinymce.models.HTMLField()),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('core', 'Core'), ('technical', 'Technical')], max_length=10)),
                ('image', models.ImageField(upload_to='team')),
                ('name', models.CharField(max_length=100)),
                ('designation', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Workflow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('left_year', models.IntegerField()),
                ('left_name', models.CharField(max_length=150)),
                ('left_discription', tinymce.models.HTMLField(blank=True, null=True)),
                ('left_image', models.ImageField(upload_to='Workflow')),
                ('right_year', models.IntegerField()),
                ('right_name', models.CharField(max_length=150)),
                ('right_discription', tinymce.models.HTMLField(blank=True, null=True)),
                ('right_image', models.ImageField(upload_to='Workflow')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('mobile', models.CharField(max_length=12, validators=[django.core.validators.RegexValidator('^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)?$', 'The phone number provided is invalid')])),
                ('country_code', models.CharField(default='91', max_length=10)),
                ('email', models.EmailField(max_length=254)),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='user_profiles')),
                ('about', models.TextField(blank=True, null=True)),
                ('address', models.CharField(blank=True, max_length=250, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('entity_type', models.CharField(choices=[('company', 'Company'), ('llp', 'LLP'), ('partnership', 'Partnership'), ('sole_proprietor', 'Sole Proprietor')], default='company', max_length=20)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('pan', models.CharField(blank=True, max_length=10, null=True)),
                ('tan', models.CharField(blank=True, max_length=10, null=True)),
                ('registration', models.CharField(choices=[('llpin', 'LLPIN'), ('firm_no', 'Firm No'), ('cin', 'CIN')], default='cin', max_length=10)),
                ('llpin', models.CharField(blank=True, max_length=8, null=True)),
                ('firm_no', models.CharField(blank=True, max_length=15, null=True)),
                ('cin', models.CharField(blank=True, max_length=21, null=True)),
                ('legal_address', models.TextField(blank=True, null=True)),
                ('branch_address', models.TextField(blank=True, null=True)),
                ('pf_number', models.CharField(blank=True, max_length=15, null=True)),
                ('esi_number', models.CharField(blank=True, max_length=15, null=True)),
                ('trade_license_number', models.CharField(blank=True, max_length=50, null=True)),
                ('rental_agreement', models.FileField(blank=True, null=True, upload_to='documents/rental_agreement/')),
                ('noc', models.FileField(blank=True, null=True, upload_to='documents/noc/')),
                ('pan_document', models.FileField(blank=True, null=True, upload_to='documents/pan/')),
                ('tan_document', models.FileField(blank=True, null=True, upload_to='documents/tan/')),
                ('incorporation_certificate', models.FileField(blank=True, null=True, upload_to='documents/incorporation/')),
                ('mom', models.FileField(blank=True, null=True, upload_to='documents/mom/')),
                ('aoa', models.FileField(blank=True, null=True, upload_to='documents/aoa/')),
                ('other_documents', models.FileField(blank=True, null=True, upload_to='documents/others/')),
                ('employee_id', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('date_of_joining', models.DateField(blank=True, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('reporting_manager', models.CharField(blank=True, max_length=255, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
                'swappable': 'AUTH_USER_MODEL',
            },
        ),
        migrations.CreateModel(
            name='OurService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='our_service_page', to='inservice.service')),
            ],
        ),
        migrations.CreateModel(
            name='Thread',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('timestamp', models.DateField(auto_now_add=True)),
                ('first_person', models.ForeignKey(blank=True, limit_choices_to={'is_admin': True}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='thread_first_person', to=settings.AUTH_USER_MODEL)),
                ('second_person', models.ForeignKey(blank=True, limit_choices_to={'is_admin': True}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='thread_second_person', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('is_seen', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('thread', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='chatmessage_thread', to='inservice.thread')),
            ],
        ),
        migrations.AddConstraint(
            model_name='thread',
            constraint=models.UniqueConstraint(fields=('first_person', 'second_person'), name='unique_thread'),
        ),
        migrations.AddConstraint(
            model_name='thread',
            constraint=models.UniqueConstraint(fields=('second_person', 'first_person'), name='unique_thread_reversed'),
        ),
    ]
